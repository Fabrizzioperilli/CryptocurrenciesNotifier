@startuml
class org.ull.dap.app.models.entities.Data {
- String id
- int rank
- String symbol
- String name
- double supply
- double maxSupply
- double marketCapUsd
- double volumeUsd24Hr
- double priceUsd
- double changePercent24Hr
- double vwap24Hr
- String explorer
+ String getId()
+ void setId(String)
+ int getRank()
+ void setRank(int)
+ String getSymbol()
+ void setSymbol(String)
+ String getName()
+ void setName(String)
+ double getSupply()
+ void setSupply(double)
+ double getMaxSupply()
+ void setMaxSupply(double)
+ double getMarketCapUsd()
+ void setMarketCapUsd(double)
+ double getVolumeUsd24Hr()
+ void setVolumeUsd24Hr(double)
+ double getPriceUsd()
+ void setPriceUsd(double)
+ double getChangePercent24Hr()
+ void setChangePercent24Hr(double)
+ double getVwap24Hr()
+ void setVwap24Hr(double)
+ String getExplorer()
+ void setExplorer(String)
+ String toString()
}
interface org.ull.dap.app.views.IView {
~ String[] getUsersSelected()
~ void setUsersSelected(String[])
~ void enableButtons(String,boolean)
}
class org.ull.dap.app.models.connections.CryptocurrencyAPI {
- String URI_API
+ HttpRequest buildHttpRequest(String)
+ HttpResponse<String> sendHttpRequest(HttpRequest)
+ Asset getAssetData(String)
+ String getUriAPI()
}
class org.ull.dap.app.views.Notification {
- boolean changeColor
- JPanel notificationPanel
- JPanel titlePanel
- JPanel footerPanel
- JPanel cryptoPanel
- JLabel lblTitle
- JScrollPane scrollPaneCrypto
+ {static} String ROUTE_IMAGE_LOGO
- void initializeUI()
- JPanel getNotificationPanel()
- JPanel getTitlePanel()
- JLabel getLblTitle()
+ ImageIcon resizeIcon(ImageIcon,int,int)
- JPanel getFooterPanel()
- JLabel getLblFooter()
- JScrollPane getScrollPaneCrypto()
- JPanel getCryptoPanel()
+ void createNotify(String,String,double)
}
class org.ull.dap.app.models.entities.Asset {
- Data data
- String timestamp
+ Data getData()
+ void setData(Data)
+ String getTimestamp()
+ void setTimestamp(String)
+ String toString()
}
class org.ull.dap.app.models.notifiers.CryptocurrencyNotifier {
- List<IObserver> observers
- IConnectionAPI connectionAPI
- List<String> namesCryptocurrencies
- List<Asset> assets
- int TIME_TO_NOTIFY
+ void subscribe(IObserver)
+ void unsubscribe(IObserver)
+ List<IObserver> getObservers()
+ void notifyObservers()
+ List<Asset> getAssets()
+ List<String> getNamesCryptocurrencies()
+ IConnectionAPI getConnectionAPI()
}
interface org.ull.dap.app.models.notifiers.Observable {
~ void subscribe(IObserver)
~ void unsubscribe(IObserver)
~ void notifyObservers()
}
class org.ull.dap.app.views.MainView {
+ {static} String ROUTE_IMAGE_LOGO
+ {static} String ROUTE_IMAGE_BITCOIN
+ {static} String ROUTE_IMAGE_ETHEREUM
+ {static} String ROUTE_IMAGE_CARDANO
+ {static} String ROUTE_IMAGE_LITECOIN
- JLabel lblTitle
- JLabel lblEthereumImagen
- JButton btnStart
- JButton btnAddCardano
- JComboBox<String> comboBoxUsersSelected
- JList<String> usersList
- JPanel contentPane
- AppController controller
- String[] usersSelected
- void initializeUI()
- JLabel getLblLogo()
- JLabel getLblTitle()
- ImageIcon resizeImage(ImageIcon,int,int)
+ JButton getBtnLogin()
+ JList<String> getListUsers()
+ JPanel getPanelLogin()
+ void nextWindow()
- void fillComboBoxUsers()
- JPanel getPanelSelectCrypto()
- JLabel getLblUser()
+ JComboBox<String> getComboBoxUsersSelected()
- JLabel getLblBitcoin()
- JLabel getLblEthereum()
- JLabel getLblCardano()
- JLabel getLblLitecoin()
- JLabel getLblBitcoinImage()
- JLabel getLblEthereumImage()
- JLabel getLblCardanoImage()
- JLabel getLblLitecoinImage()
- JButton getBtnAddBitcoin()
- JButton getBtnDeleteBitcoin()
- JButton getBtnAddEthereum()
- JButton getBtnDeleteEthereum()
- JButton getBtnAddCardano()
- JButton getBtnDeleteCardano()
- JButton getBtnAddLitecoin()
- JButton getBtnDeleteLitecoin()
+ String[] getUsersSelected()
+ void setUsersSelected(String[])
- JButton getBtnStart()
+ void enableButtons(String,boolean)
- void eventButtons()
- void activateButtons(String,JButton,JButton)
}
class org.ull.dap.app.models.users.User {
- String name
- long id
- List<String> nameCryptos
- Map<String,Double> cryptoPrices
- Notification v
+ void update(String,double)
+ List<String> getNameCryptos()
+ Map<String,Double> getCryptoPrices()
+ void addCrypto(String)
+ void deleteCrypto(String)
+ String toString()
+ int hashCode()
+ String getName()
+ void setNotification(Notification)
+ Notification getNotification()
}
interface org.ull.dap.app.models.users.IObserver {
~ void update(String,double)
~ void addCrypto(String)
~ void deleteCrypto(String)
~ List<String> getNameCryptos()
}
interface org.ull.dap.app.models.connections.IConnectionAPI {
~ HttpRequest buildHttpRequest(String)
~ HttpResponse<String> sendHttpRequest(HttpRequest)
~ Asset getAssetData(String)
}
class org.ull.dap.app.controllers.AppController {
- CryptocurrencyNotifier notifier
- IView view
+ CryptocurrencyNotifier getNotifier()
+ void setNotifier(CryptocurrencyNotifier)
+ IView getView()
+ void setView(IView)
+ void actionPerformed(ActionEvent)
- void handleLogin()
- void handleStart()
- void handleCryptoAction(String)
- void showError()
+ void suscribeUsers(String[])
+ boolean checkAllUsersHaveCryptos()
+ void start()
- void startBackground()
- void addCrypto(String)
- void deleteCrypto(String)
- void handleCryptoOperation(String,IObserver,boolean,String)
}
class org.ull.dap.app.Main {
+ {static} void main(String[])
}


org.ull.dap.app.models.connections.IConnectionAPI <|.. org.ull.dap.app.models.connections.CryptocurrencyAPI
org.ull.dap.app.views.JFrame <|-- org.ull.dap.app.views.Notification
org.ull.dap.app.models.notifiers.Observable <|.. org.ull.dap.app.models.notifiers.CryptocurrencyNotifier
org.ull.dap.app.views.IView <|.. org.ull.dap.app.views.MainView
org.ull.dap.app.views.JFrame <|-- org.ull.dap.app.views.MainView
org.ull.dap.app.models.users.IObserver <|.. org.ull.dap.app.models.users.User
java.awt.event.ActionListener <|.. org.ull.dap.app.controllers.AppController
@enduml